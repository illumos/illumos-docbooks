<chapter xml:id="chp-dtrace1m">
<title><citerefentry><refentrytitle>dtrace</refentrytitle><manvolnum>1M</manvolnum></citerefentry> Utility</title>
<para><phrase role="first-word">The generic front-end</phrase> to the DTrace
facility is the <citerefentry><refentrytitle>dtrace</refentrytitle><manvolnum>1M</manvolnum></citerefentry>
command, which implements a simple interface to invoke the D language
compiler, the ability to retrieve buffered trace data from the DTrace kernel
facility, and a set of basic routines to format and print traced data. This
chapter provides a complete reference for the <command>dtrace</command>
command.</para>
<sect1 xml:id="chp-dtrace1m-1">
<title>Description</title>
<para><indexterm><primary><literal>dtrace</literal> utility</primary></indexterm>The <command>dtrace</command> command provides a generic interface
to all of the essential services provided by the DTrace facility, including:</para><itemizedlist><listitem><para>Options to list the set of probes and providers currently
published by DTrace</para>
</listitem><listitem><para>Options to enable probes directly using any of the probe description
specifiers (provider, module, function, name)</para>
</listitem><listitem><para>Options to run the D compiler and compile one or more D program
files or programs written directly on the command-line</para>
</listitem><listitem><para>Options to generate anonymous tracing programs (see <xref linkend="chp-anon" />)</para>
</listitem><listitem><para>Options to generate program stability reports (see <xref linkend="chp-stab" />)</para>
</listitem><listitem><para>Options to modify DTrace tracing and buffering behavior and
enable additional D compiler features (see <xref linkend="chp-opt" />)</para>
</listitem>
</itemizedlist><para><command>dtrace</command> can also be used to create D scripts by using
it in a <literal>#!</literal> declaration to create an interpreter file (see <xref linkend="chp-script" />). Finally, you can
use <command>dtrace</command> to attempt to compile D programs and determine
their properties without actually enabling any tracing using the <option>e</option> option,
described below.</para>
</sect1>
<sect1 xml:id="chp-dtrace1m-2">
<title>Options</title>
<para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary></indexterm>The <command>dtrace</command> command accepts the following options:</para>
<cmdsynopsis><command>dtrace</command>
<group><arg choice="plain"><option>32</option></arg><arg choice="plain"><option>64</option></arg>
</group><group choice="opt"><option>aACeFGHlqSvVwZ</option>
</group><group choice="opt"><option>b</option><replaceable>bufsz</replaceable>
</group><group choice="opt"><option>c</option><replaceable>cmd</replaceable>
</group><group choice="opt"><option>D</option><replaceable>name</replaceable><group choice="opt"><replaceable>=def</replaceable>
</group>
</group><group choice="opt"><option>I</option><replaceable>path</replaceable>
</group><group choice="opt"><option>L</option><replaceable>path</replaceable>
</group><group choice="opt"><option>o</option><replaceable>output</replaceable>
</group><group choice="opt"><option>p</option><replaceable>pid</replaceable>
</group><group choice="opt"><option>s</option><replaceable>script</replaceable>
</group><group choice="opt"><option>U</option><replaceable>name</replaceable>
</group><group choice="opt"><option>x</option><replaceable>arg</replaceable><group choice="opt"><replaceable>=val</replaceable>
</group>
</group><group choice="opt"><option>X</option><group choice="plain"><arg choice="plain">a</arg><arg choice="plain">c</arg><arg choice="plain">s</arg><arg choice="plain">t</arg>
</group>
</group><group choice="opt"><option>P</option><replaceable>provider</replaceable><group choice="opt"><group choice="opt"><replaceable>predicate</replaceable>
</group><replaceable>action</replaceable>
</group>
</group><group choice="opt"><option>m</option><arg><group choice="opt"><replaceable>provider:</replaceable>
</group><replaceable>module</replaceable><group choice="opt"><group choice="opt"><replaceable>predicate</replaceable>
</group><replaceable>action</replaceable>
</group></arg>
</group><group choice="opt"><option>f</option><group choice="opt"><group choice="opt"><replaceable>provider:</replaceable>
</group><replaceable>module:</replaceable>
</group><replaceable>func</replaceable><group choice="opt"><group choice="opt"><replaceable>predicate</replaceable>
</group><replaceable>action</replaceable>
</group>
</group><group choice="opt"><option>n</option><group choice="opt"><group choice="opt"><group choice="opt"><replaceable>provider:</replaceable>
</group><replaceable>module:</replaceable>
</group><replaceable>func:</replaceable>
</group><replaceable>name</replaceable><group choice="opt"><group choice="opt"><replaceable>predicate</replaceable>
</group><replaceable>action</replaceable>
</group>
</group><group choice="opt"><option>i</option><replaceable>probe-id</replaceable><group choice="opt"><group choice="opt"><replaceable>predicate</replaceable>
</group><replaceable>action</replaceable>
</group>
</group>
</cmdsynopsis><para>where <replaceable>predicate</replaceable> is any D predicate enclosed
in slashes <literal>/ /</literal> and <replaceable>action</replaceable> is
any D statement list enclosed in braces <literal>{ }</literal> according to
the previously described D language syntax. If D program code is provided
as an argument to the <option>P</option>, <option>m</option>, <option>f</option>, <option>n</option>, or <option>i</option> options this text must be appropriately
quoted to avoid interpretation by the shell. The options are as follows:</para><variablelist termlength="xtranarrow"><varlistentry><term><option>32</option>, <option>64</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>64</tertiary></indexterm><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>32</tertiary></indexterm>The D compiler produces programs using
the native data model of the operating system kernel. You can use the <citerefentry><refentrytitle>isainfo</refentrytitle><manvolnum>1</manvolnum></citerefentry> <option>b</option> command
to determine the current operating system data model. If the <option>32</option> option
is specified, <command>dtrace</command> will force the D compiler to compile
a D program using the 32-bit data model. If the <option>64</option> option
is specified, <command>dtrace</command> will force the D compiler to compile
a D program using the 64-bit data model. These options are typically not required
as <command>dtrace</command> selects the native data model as the default.
The data model affects the sizes of integer types and other language properties.
D programs compiled for either data model may be executed on both 32-bit and
64-bit kernels. The <option>32</option> and <option>64</option> options also
determine the ELF file format (ELF32 or ELF64) produced by the <option>G</option> option.</para>
</listitem>
</varlistentry><varlistentry><term><option>a</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>a</tertiary></indexterm>Claim anonymous
tracing state and display the traced data. You can combine the <option>a</option> option
with the <option>e</option> option to force <command>dtrace</command> to exit
immediately after consuming the anonymous tracing state rather than continuing
to wait for new data. See <xref linkend="chp-anon" />
for more information about anonymous tracing.</para>
</listitem>
</varlistentry><varlistentry><term><option>A</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>A</tertiary></indexterm>Generate <citerefentry><refentrytitle>driver.conf</refentrytitle><manvolnum>4</manvolnum></citerefentry> directives
for anonymous tracing. If the <option>A</option> option is specified, <command>dtrace</command> compiles any D programs specified using the <option>s</option> option
or on the command-line and constructs a set of <citerefentry><refentrytitle>dtrace</refentrytitle><manvolnum>7D</manvolnum></citerefentry> configuration file directives
to enable the specified probes for anonymous tracing (see <xref linkend="chp-anon" />) and then
exits. By default, <command>dtrace</command> attempts to store the directives
to the file <filename>/kernel/drv/dtrace.conf</filename>. This behavior can
be modified using the <option>o</option> option to specify an alternate output
file.</para>
</listitem>
</varlistentry><varlistentry><term><option>b</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>b</tertiary></indexterm>Set principal
trace buffer size. The trace buffer size can include any of the size suffixes <literal>k</literal>, <literal>m</literal>, <literal>g</literal>, or <literal>t</literal> as
described in <xref linkend="chp-anon" />.
If the buffer space cannot be allocated, <command>dtrace</command> attempts
to reduce the buffer size or exit depending on the setting of the <literal>bufresize</literal> property.</para>
</listitem>
</varlistentry><varlistentry><term><option>c</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>c</tertiary></indexterm>Run the specified
command <replaceable>cmd</replaceable> and exit upon its completion. If more
than one <option>c</option> option is present on the command line, <command>dtrace</command> exits when all commands have exited, reporting the exit status
for each child process as it terminates. The process-ID of the first command
is made available to any D programs specified on the command line or using
the <option>s</option> option through the <literal>$target</literal> macro
variable. Refer to <xref linkend="chp-script" /> for
more information on macro variables.</para>
</listitem>
</varlistentry><varlistentry><term><option>C</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>C</tertiary></indexterm>Run the C
preprocessor <citerefentry><refentrytitle>cpp</refentrytitle><manvolnum>1</manvolnum></citerefentry> over
D programs before compiling them. Options can be passed to the C preprocessor
using the <option>D</option>, <option>U</option>, <option>I</option>, and <option>H</option> options. The degree of C standard conformance can be selected using
the <option>X</option> option. Refer to the description of the <option>X</option> option
for a description of the set of tokens defined by the D compiler when invoking
the C preprocessor.</para>
</listitem>
</varlistentry><varlistentry><term><option>D</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>D</tertiary></indexterm>Define the
specified <replaceable>name</replaceable> when invoking <citerefentry><refentrytitle>cpp</refentrytitle><manvolnum>1</manvolnum></citerefentry> (enabled using the <option>C</option> option).
If an equals sign (<literal>=</literal>) and additional <replaceable>value</replaceable> are
specified, the name is assigned the corresponding value. This option passes
the <option>D</option> option to each <command>cpp</command> invocation.</para>
</listitem>
</varlistentry><varlistentry><term><option>e</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>e</tertiary></indexterm>Exit after
compiling any requests and consuming anonymous tracing state (<option>a</option> option)
but prior to enabling any probes. This option can be combined with the <option>a</option> option
to print anonymous tracing data and exit, or it can be combined with D compiler
options to verify that the programs compile without actually executing them
and enabling the corresponding instrumentation.</para>
</listitem>
</varlistentry><varlistentry><term><option>f</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>f</tertiary></indexterm>Specify function
name to trace or list (<option>l</option> option). The corresponding argument
can include any of the probe description forms <replaceable>provider:module:function</replaceable>, <replaceable>module:function</replaceable>, or <replaceable>function</replaceable>. Unspecified probe description fields are left blank and match
any probes regardless of the values in those fields. If no qualifiers other
than <replaceable>function</replaceable> are specified in the description,
all probes with the corresponding <replaceable>function</replaceable> are
matched. The <option>f</option> argument can be suffixed with an optional
D probe clause. More than one <option>f</option> option may be specified on
the command-line at a time.</para>
</listitem>
</varlistentry><varlistentry><term><option>F</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>F</tertiary></indexterm>Coalesce trace
output by identifying function entry and return. Function entry probe reports
are indented and their output is prefixed with <literal>-&gt;</literal>. Function
return probe reports are unindented and their output is prefixed with <literal>&lt;-</literal>.</para>
</listitem>
</varlistentry><varlistentry><term><option>G</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>G</tertiary></indexterm>Generate an
ELF file containing an embedded DTrace program. The DTrace probes specified
in the program are saved inside of a relocatable ELF object that can be linked
into another program. If the <option>o</option> option is present, the ELF
file is saved using the pathname specified as the argument for this operand.
If the <option>o</option> option is not present and the DTrace program is
contained in a file whose name is <replaceable>filename</replaceable><literal>.s</literal>,
then the ELF file is saved using the name <replaceable>file</replaceable><literal>.o</literal>; otherwise the ELF file is saved using the name <literal>d.out</literal>.</para>
</listitem>
</varlistentry><varlistentry><term><option>H</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>H</tertiary></indexterm>Print the
pathnames of included files when invoking <citerefentry><refentrytitle>cpp</refentrytitle><manvolnum>1</manvolnum></citerefentry> (enabled using the <option>C</option> option). This
option passes the <option>H</option> option to each <command>cpp</command> invocation,
causing it to display the list of pathnames, one per line, to <literal>stderr</literal>.</para>
</listitem>
</varlistentry><varlistentry><term><option>i</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>i</tertiary></indexterm>Specify probe
identifier to trace or list (<option>l</option> option). Probe IDs are specified
using decimal integers as shown by <command>dtrace</command> <option>l</option>.
The <option>i</option> argument can be suffixed with an optional D probe clause.
More than one <option>i</option> option may be specified on the command-line
at a time.</para>
</listitem>
</varlistentry><varlistentry><term><option>I</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>I</tertiary></indexterm>Add the specified
directory <replaceable>path</replaceable> to the search path for <literal>#include</literal> files when invoking <citerefentry><refentrytitle>cpp</refentrytitle><manvolnum>1</manvolnum></citerefentry> (enabled
using the <option>C</option> option). This option passes the <option>I</option> option
to each <command>cpp</command> invocation. The specified directory is inserted
into the search path ahead of the default directory list.</para>
</listitem>
</varlistentry><varlistentry><term><option>l</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>l</tertiary></indexterm>List probes
instead of enabling them. If the <option>l</option> option is specified, <command>dtrace</command> produces a report of the probes matching the descriptions
given using the <option>P</option>, <option>m</option>, <option>f</option>, <option>n</option>, <option>i</option>, and <option>s</option> options. If none of
these options are specified, all probes are listed.</para>
</listitem>
</varlistentry><varlistentry><term><option>L</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>L</tertiary></indexterm>Add the specified
directory <replaceable>path</replaceable> to the search path for DTrace libraries.
DTrace libraries are used to contain common definitions that may be used when
writing D programs. The specified <replaceable>path</replaceable> is added
after the default library search path.</para>
</listitem>
</varlistentry><varlistentry><term><option>m</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>m</tertiary></indexterm>Specify module
name to trace or list (<option>l</option> option). The corresponding argument
can include any of the probe description forms <replaceable>provider:module</replaceable> or <replaceable>module</replaceable>. Unspecified probe description fields are left blank
and match any probes regardless of the values in those fields. If no qualifiers
other than <replaceable>module</replaceable> are specified in the description,
all probes with a corresponding <replaceable>module</replaceable> are matched.
The <option>m</option> argument can be suffixed with an optional D probe clause.
More than one <option>m</option> option may be specified on the command-line
at a time.</para>
</listitem>
</varlistentry><varlistentry><term><option>n</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>n</tertiary></indexterm>Specify probe
name to trace or list (<option>l</option> option). The corresponding argument
can include any of the probe description forms <replaceable>provider:module:function:name</replaceable>, <replaceable>module:function:name</replaceable>, <replaceable>function:name</replaceable>, or <replaceable>name</replaceable>. Unspecified probe description
fields are left blank and match any probes regardless of the values in those
fields. If no qualifiers other than <replaceable>name</replaceable> are specified
in the description, all probes with a corresponding <replaceable>name</replaceable> are
matched. The <option>n</option> argument can be suffixed with an optional
D probe clause. More than one <option>n</option> option may be specified on
the command-line at a time.</para>
</listitem>
</varlistentry><varlistentry><term><option>o</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>o</tertiary></indexterm>Specify the <replaceable>output</replaceable> file for the <option>A</option> , <option>G</option>,
and <option>l</option> options, or for the traced data. If the <option>A</option> option
is present and <option>o</option> is not present, the default output file
is <filename>/kernel/drv/dtrace.conf</filename>. If the <option>G</option> option
is present and the <option>s</option> option's argument is of the form <literal></literal><replaceable>filename</replaceable><literal>.d</literal> and <option>o</option> is not
present, the default output file is <literal></literal><replaceable>filename</replaceable><literal>.o</literal>; otherwise the default output file is <filename>d.out</filename>.</para>
</listitem>
</varlistentry><varlistentry><term><option>p</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>p</tertiary></indexterm>Grab the specified
process-ID <replaceable>pid</replaceable>, cache its symbol tables, and exit
upon its completion. If more than one <option>p</option> option is present
on the command line, <command>dtrace</command> exits when all commands have
exited, reporting the exit status for each process as it terminates. The first
process-ID is made available to any D programs specified on the command line
or using the <option>s</option> option through the <literal>$target</literal> macro
variable. Refer to <xref linkend="chp-script" /> for
more information on macro variables.</para>
</listitem>
</varlistentry><varlistentry><term><option>P</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>P</tertiary></indexterm>Specify provider
name to trace or list (<option>l</option> option). The remaining probe description
fields module, function, and name are left blank and match any probes regardless
of the values in those fields. The <option>P</option> argument can be suffixed
with an optional D probe clause. More than one <option>P</option> option may
be specified on the command-line at a time.</para>
</listitem>
</varlistentry><varlistentry><term><option>q</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>q</tertiary></indexterm>Set quiet
mode. <command>dtrace</command> will suppress messages such as the number
of probes matched by the specified options and D programs and will not print
column headers, the CPU ID, the probe ID, or insert newlines into the output.
Only data traced and formatted by D program statements such as <function>trace</function> and <function>printf</function> will be displayed to <literal>stdout</literal>.</para>
</listitem>
</varlistentry><varlistentry><term><option>s</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>s</tertiary></indexterm>Compile the
specified D program source file. If the <option>e</option> option is present,
the program is compiled but no instrumentation is enabled. If the <option>l</option> option
is present, the program is compiled and the set of probes matched by it is
listed, but no instrumentation will be enabled. If neither <option>e</option> nor <option>l</option> are present, the instrumentation specified by the D program is
enabled and tracing begins.</para>
</listitem>
</varlistentry><varlistentry><term><option>S</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>S</tertiary></indexterm>Show D compiler
intermediate code. The D compiler will produce a report of the intermediate
code generated for each D program to <literal>stderr</literal>.</para>
</listitem>
</varlistentry><varlistentry><term><option>U</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>U</tertiary></indexterm>Undefine the
specified <replaceable>name</replaceable> when invoking <citerefentry><refentrytitle>cpp</refentrytitle><manvolnum>1</manvolnum></citerefentry> (enabled using the <option>C</option> option).
This option passes the <option>U</option> option to each <command>cpp</command> invocation.</para>
</listitem>
</varlistentry><varlistentry><term><option>v</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>v</tertiary></indexterm>Set verbose
mode. If the <option>v</option> option is specified, <command>dtrace</command> produces
a program stability report showing the minimum interface stability and dependency
level for the specified D programs. DTrace stability levels are explained
in further detail in <xref linkend="chp-stab" />.</para>
</listitem>
</varlistentry><varlistentry><term><option>V</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>V</tertiary></indexterm>Report the
highest D programming interface version supported by <command>dtrace</command>.
The version information is printed to <literal>stdout</literal> and the <command>dtrace</command> command exits. See <xref linkend="chp-vers" />
for more information about DTrace versioning features.</para>
</listitem>
</varlistentry><varlistentry><term><option>w</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>w</tertiary></indexterm>Permit destructive
actions in D programs specified using the <option>s</option>, <option>P</option>, <option>m</option>, <option>f</option>, <option>n</option>, or <option>i</option> options.
If the <option>w</option> option is not specified, <command>dtrace</command> will
not permit the compilation or enabling of a D program that contains destructive
actions. Destructive actions are described in further detail in <xref linkend="chp-actsub" />.</para>
</listitem>
</varlistentry><varlistentry><term><option>x</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>x</tertiary></indexterm>Enable or
modify a DTrace runtime option or D compiler option. The options are listed
in <xref linkend="chp-opt" />.
Boolean options are enabled by specifying their name. Options with values
are set by separating the option name and value with an equals sign (<literal>=</literal>).</para>
</listitem>
</varlistentry><varlistentry><term><option>X</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>X</tertiary></indexterm>Specify the
degree of conformance to the ISO C standard that should be selected when invoking <citerefentry><refentrytitle>cpp</refentrytitle><manvolnum>1</manvolnum></citerefentry> (enabled using the <option>C</option> option).
The <option>X</option> option argument affects the value and presence of the <literal>__STDC__</literal> macro depending upon the value of the argument letter:</para><variablelist><varlistentry><term><literal>a</literal> (default)</term><listitem><para>ISO C plus K&amp;R compatibility extensions, with semantic
changes required by ISO C. This mode is the default mode if <option>X</option> is
not specified. The predefined macro <literal>__STDC__</literal> has a value
of 0 when <command>cpp</command> is invoked in conjunction with the <option>Xa</option> option.</para>
</listitem>
</varlistentry><varlistentry><term><literal>c</literal> (conformance)</term><listitem><para>Strictly conformant ISO C, without K&amp;R C compatibility
extensions. The predefined macro <literal>__STDC__</literal> has a value of
1 when <command>cpp</command> is invoked in conjunction with the <option>Xc</option> option.</para>
</listitem>
</varlistentry><varlistentry><term><literal>s</literal> (K&amp;R C)</term><listitem><para>K&amp;R C only. The macro <literal>__STDC__</literal> is not
defined when <command>cpp</command> is invoked in conjunction with the <option>Xs</option> option.</para>
</listitem>
</varlistentry><varlistentry><term><literal>t</literal> (transition)</term><listitem><para>ISO C plus K&amp;R C compatibility extensions, without semantic
changes required by ISO C. The predefined macro <literal>__STDC__</literal> has
a value of 0 when <command>cpp</command> is invoked in conjunction with the <option>Xt</option> option.</para>
</listitem>
</varlistentry>
</variablelist><para>Because the <option>X</option> option affects only how the D compiler
invokes the C preprocessor, the <option>Xa</option> and <option>Xt</option> options
are equivalent from the perspective of D. Both options are provided to ease
re-use of settings from a C build environment.</para><para>Regardless of the <option>X</option> mode, the following additional
C preprocessor definitions are always specified and valid in all modes:</para>
<itemizedlist>
	<listitem><para><literal>__sun</literal></para></listitem>
	<listitem><para><literal>__unix</literal></para></listitem>
	<listitem><para><literal>__SVR4</literal></para></listitem>
	<listitem><para><literal>__sparc</literal> (on SPARC&reg; systems only)</para></listitem>
	<listitem><para><literal>__sparcv9</literal> (on SPARC&reg; systems only when 64&ndash;bit programs are compiled)</para></listitem>
	<listitem><para><literal>__i386</literal> (on x86 systems only when 32&ndash;bit programs are compiled)</para></listitem>
	<listitem><para><literal>__amd64</literal> (on x86 systems only when 64&ndash;bit programs are compiled)</para></listitem>
	<listitem>
		<para><literal>__</literal><replaceable>'uname -s'</replaceable><literal>_</literal><replaceable>'uname -r'</replaceable>,
			replacing the decimal point in the output of <command>uname</command> with an underbar (<literal>_</literal>),
			as in <literal>__SunOS_5_10</literal></para></listitem>
	<listitem><para><literal>__SUNW_D=1</literal></para></listitem>
	<listitem><para><literal>__SUNW_D_VERSION=0x</literal><replaceable>MMmmmuuu</replaceable><literal></literal> (where <replaceable>MM</replaceable> is the Major release value in hexadecimal, <replaceable>mmm</replaceable> is the Minor release value in hexadecimal, and <replaceable>uuu</replaceable> is the Micro release value in hexadecimal; see <xref linkend="chp-vers" /> for more information about DTrace versioning)</para></listitem>
</itemizedlist>
</listitem>
</varlistentry><varlistentry><term><option>Z</option></term><listitem><para><indexterm><primary><literal>dtrace</literal></primary><secondary>options</secondary><tertiary>Z</tertiary></indexterm>Permit probe
descriptions that match zero probes. If the <option>Z</option> option is not
specified, <command>dtrace</command> will report an error and exit if any
probe descriptions specified in D program files (<option>s</option> option)
or on the command-line (<option>P</option>, <option>m</option>, <option>f</option>, <option>n</option>, or <option>i</option> options) contain descriptions that do not
match any known probes.</para>
</listitem>
</varlistentry>
</variablelist>
</sect1>
<sect1 xml:id="chp-dtrace1m-3">
<title>Operands</title>
<para><indexterm><primary><literal>dtrace</literal></primary><secondary>operands</secondary></indexterm>Zero or more additional arguments may be specified on the <command>dtrace</command> command line to define a set of macro variables (<literal>$1</literal>, <literal>$2</literal>, and so on) to be used in any D programs specified using the <option>s</option> option or on the command-line. The use of macro variables is described
further in <xref linkend="chp-script" />.</para>
</sect1>
<sect1 xml:id="chp-dtrace1m-4">
<title>Exit Status</title>
<para><indexterm><primary><literal>dtrace</literal></primary><secondary>exit values</secondary></indexterm>The following exit values are returned by the <command>dtrace</command> utility:</para>
<variablelist termlength="xtranarrow"><varlistentry><term>0</term><listitem>
<para>The specified requests were completed successfully. For D
program requests, the 0 exit status indicates that programs were successfully
compiled, probes were successfully enabled, or anonymous state was successfully
retrieved. <command>dtrace</command> returns 0 even if the specified tracing
requests encountered errors or drops.</para>
</listitem>
</varlistentry><varlistentry><term>1</term><listitem><para>A fatal error occurred. For D program requests, the 1 exit
status indicates that program compilation failed or that the specified request
could not be satisfied.</para>
</listitem>
</varlistentry><varlistentry><term>2</term><listitem><para>Invalid command-line options or arguments were specified.</para>
</listitem>
</varlistentry>
</variablelist>
</sect1>
</chapter>
